---
- name: Ensure prometheus user exists
  ansible.builtin.user:
    name: prometheus
    system: yes
    create_home: no
    shell: /usr/sbin/nologin

- name: Get latest redis_exporter download URL
  ansible.builtin.shell: |
    curl -s https://api.github.com/repos/oliver006/redis_exporter/releases/latest \
    | grep browser_download_url \
    | grep linux-amd64 \
    | cut -d '"' -f 4
  register: redis_exporter_url

- name: Extract filename from URL
  set_fact:
    redis_exporter_filename: "{{ redis_exporter_url.stdout | basename }}"

- name: Download redis_exporter archive
  ansible.builtin.get_url:
    url: "{{ redis_exporter_url.stdout }}"
    dest: "/tmp/{{ redis_exporter_filename }}"
    mode: '0644'

- name: Extract redis_exporter archive
  ansible.builtin.unarchive:
    src: "/tmp/{{ redis_exporter_filename }}"
    dest: /tmp/
    remote_src: yes

- name: Move redis_exporter binary to /usr/local/bin
  ansible.builtin.command: >
    mv /tmp/{{ redis_exporter_filename | regex_replace('\.tar\.gz$', '') }}/redis_exporter /usr/local/bin/redis_exporter
  args:
    creates: /usr/local/bin/redis_exporter

- name: Verify redis_exporter version
  ansible.builtin.command: redis_exporter --version
  register: exporter_version
  changed_when: false

- name: Create systemd service file for redis_exporter
  ansible.builtin.copy:
    src: redis_exporter.service.j2
    dest: /etc/systemd/system/redis_exporter.service
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable redis_exporter service
  ansible.builtin.systemd:
    name: redis_exporter
    enabled: yes

- name: Start redis_exporter service
  ansible.builtin.systemd:
    name: redis_exporter
    state: started
